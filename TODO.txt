x login.html

- index.html
  x if not logged in, redirect to login.html?from=index.html

- classes for adjusting pages:
   kc-staff-only-editable
   ... use python to add readonly="readonly" to all such inputs unless
   logged in as staff or admin
   kc-admin-only-editable similar
   kc-staff-only-visible, remove unless logged in as staff or admin
   kc-admin-only-visible, remove unless logged in as admin
   kc-parent-only-visible, remove if logged in as admin or staff

- admin password
- staff password (editable via super password)
- parent password (editable via staff password)

- session:
  - key : uid sent as cookie
  - level : admin||staff||parent
  - touched : server-time

- view: set<group> - sent as cookie

x terms:
  x number of terms
  x dates : [ (start date,end date) ]
  x editable via admin password edit-terms.html

- groups
  x editable via staff password
  x edit_groups.html
  x edit_groups.js
    x get
    x post
    - polish

- schema:
  - BoolType
  - allow literals (matches that literal)
  x OneOf(a,b,c) - match exactly one of the items
    (so OneOf('a','b','c') is an enum)
  - set(x) - set of x
  x IntType as dict key
  x StringType as dict key
  - embed Schema

- events.html
  - show group(s) selector
    x get/set cookie
    x generate options all,1,2,3,4,1+2,3+4,1+3,2+4
    x select option based on cookie
    x update cookie on change
  - new event link (staff only)
    x display form
    x save form
    - mce for description
  - calendar month
    x get current month via month_calendar and display
    x highlight days of groups-to-show
      x adjust month_calendar to return {'term':IntType,'week':IntType}||None as 'term_week' instead of 'name'
      x that way we know if it even or odd week for that term and
        can figure out which days group is on that week
)
    x fetch events for this month
      x query via months but how?
    x filter events by groups-to-show
    - allow date(s) select
  x use jquery date picker (edit_terms.js)
  - find colour picker (edit_event.html)
  - use mce (edit_event.html)
    
  x prev/next month links
  - delete event
  x go back to events on save event (and refresh)
  x test add dates to event, remove dates from event
  - edit_terms.js: on save return to previous page
  
- event.html
  - schema: {
      id: IntType,
      groups: [ IntType ],
      dates : [ {year:IntType,month:IntType,Day:IntType} ],
      name : {
        text:StringType,
        colour:StringType
      },
      description : {
        html : StringType
      }
  - calc weeks
  - calc events

- edit_event.html
  - pass in eventid + date + monthToShow + bg colour
  - edit_event.js
    - fetch event (for non-zero id passed in)
    - mce
    - name bg colour
    - name colour
    - save (return to calendar for monthToShow)
    - image upload (later)

- terms start with monday/tue or monday/tue/wed, not per group
  - grey out of term
- public holidays separate

- View All Groups
- upload document/image

use event for:
  - group kindy days
  - public holidays/kid-free days
  - maintenance days
  ... everything except kindy fair stall roster, which would be link
  to separate area like rss-carnival roster stuff, and time-with-your-child
  which will be separate

admin pages:
  staff-password.html

staff pages:
  groups.html
  parent-password.html

parent pages:
  events.html

  
-----------------------

  /usr/local/google_appengine/appcfg.py -e xju360@gmail.com update .
  git status
  git push ~/kindycal.bare/
  /usr/local/google_appengine/dev_appserver.py --host 192.168.0.3 --datastore_path=~/kindycal-data --blobstore_path=~/kindycal-blob ~/kindycal/www
