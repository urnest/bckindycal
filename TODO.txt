x edit links page, staff only:

x finish image2 mce plugin
  x test insert image
  x check size boxes
  x adjust width, height follows
  x adjust heigh, width follows
  x not-linked
  x relink
  x test above with existing image
  x add Replace Image... button
    x check keeps size

x switch all mces over to it

x merge admin pages (admin,staff,fair)
- edit fair details:
  x fair.updateFairDetails(page)
  x use from EditFairPage
  x and all others that have date/email/message
  x input box border around fair message on edit_fair.html
  x test reference count images in Fair.message
  - and info@bardonkindy.com.au?
  - "email the office"? (Bottom of stall page)
- edit fair convenors
  - like edit_maintenance_day.html/js
- delete stall convenor
- add stall
  x fair.stalls[x]['email'] is no longer used - delete
  x replace use of stalls (list) with fair.getListOfStalls()
    x reimplement as query, with on-the-fly forced update
      of StallPrefs to add displayName
  - force update on all 3 sites, then remove fair.stalls altogether
    - visit fair_convenor_list.html
      - xjutv
      - xju
      - appspot
  - remove fair.stalls and adjust getStalls()
  - add editing of display name
  - move hard-coded descriptions into StallPrefs
  - replace hard-coded with generic samples to avoid confusion
  - rename StallPrefs to Stall
  - add editing of description
  - add stall creates key from display name (replace space, & with _)

- individual stall page is missing Admin button
- fair_convenor_list is missing Admin button

- edit links page links
- add admin password change page
- hash passwords
  - change all passwords on web and nicole's to force into database
  - change default password to default password hashes of 'password'+salt
    https://exyr.org/2011/hashing-passwords/
  - when checking password, if no hash in db, put hash in from first
    valid of db password, default hash
  - test locally, including password change, before upload
- hide past twycs
- no addme on past maintenance days/roster jobs
- re-add calendar group selector
- make groups cookie persistent till 2/1 next year
- fix login page focus
- replace window.confirm use with dialog
- export fair stuff
- edit html on pages
- change stall roster comment to html

x fix up stall v stall admin so it works more naturally

x hide events

x bin fair volunteer

- .ics https://tools.ietf.org/html/rfc2445

BEGIN:VCALENDAR\r\n
VERSION:2.0
PRODID:https://bckindycal-1197.appspot.com
BEGIN:VEVENT
UID:https://bckindycal-1197.appspot.com/event.html?id=1001
DTSTAMP:19970901T1300Z
DTSTART:19971102
SUMMARY:Our Blissful Anniversary
DESCRIPTION:https://bckindycal-1197.appspot.com/event.html?id=1001
END:VEVENT
END:VCALENDAR

x family information report
x add another name (edit_maintenance_day.html/js colspan=2)
x adjust maintenance_day.js to know maxVolunteers and hide addme button
  once we get there
x hide addme when past:
  x maintenance_day.js
  x twyc.js

x hide past maintenance days
x maint day title does not display
x description dialog position on ipod
x add me maintenance day too big
  x fix width, but < 300 (which it was)
x roster.html - change Maintenance Days to Maintenance (heading)
  x add task name to display
  x move addme to next line
  x title of addme popups
  x limit volunteers (hide addme when reached - 2 pages)
x edit_event/maintenance_day/public_holiday go back to edit_events
x add admin menu item to navbar when admin (-> admin.html)
x add admin menu item to navbar when staff (-> staff.html)

x login.html

x index.html
  x if not logged in, redirect to login.html?from=index.html

x admin password
x staff password (editable via super password)
x parent password (editable via staff password)

x session:
  x key : uid sent as cookie
  x level : admin||staff||parent
  x touched : server-time

x view: set<group> - sent as cookie

x terms:
  x number of terms
  x dates : [ (start date,end date) ]
  x editable via admin password edit-terms.html

x groups
  x editable via staff password
  x edit_groups.html
  x edit_groups.js
    x get
    x post
    x polish

x schema:
  x BoolType
  x allow literals (matches that literal)
  x OneOf(a,b,c) - match exactly one of the items
    (so OneOf('a','b','c') is an enum)
  x IntType as dict key
  x StringType as dict key
  x embed Schema

- add HTML type to schema and promote all string things that are really
  html to HTML type, validation accepts String that can be parsed by pq
  (might do this in urnest/pq)
- then write a getAllHTML(x,schema) that traverses x according to schema
  and returns list of values of all HTML elements
  (might do this in urnest/pq)

- then use that to make getting uploaded_file refs generic

x events.html
  x show group(s) selector
    x get/set cookie
    x generate options all,1,2,3,4,1+2,3+4,1+3,2+4
    x select option based on cookie
    x update cookie on change
  x new event link (staff only)
    x display form
    x save form
    x mce for description
  x calendar month
    x get current month via month_calendar and display
    x highlight days of groups-to-show
      x adjust month_calendar to return {'term':IntType,'week':IntType}||None as 'term_week' instead of 'name'
      x that way we know if it even or odd week for that term and
        can figure out which days group is on that week
)
    x fetch events for this month
      x query via months but how?
    x filter events by groups-to-show
    x allow date(s) select
  x use jquery date picker (edit_terms.js)
  ~ find colour picker (edit_event.html)
  x use mce (edit_event.html)
    
  x prev/next month links
  x delete event
  x go back to events on save event (and refresh)
  x test add dates to event, remove dates from event
  x edit_terms.js: on save return to previous page
  
x event.html
  x schema: {
      id: IntType,
      groups: [ IntType ],
      dates : [ {year:IntType,month:IntType,Day:IntType} ],
      name : {
        text:StringType,
        colour:StringType
      },
      description : {
        html : StringType
      }
  x calc weeks
  x calc events

x edit_event.html
  x edit_event.js
    x fetch event (for non-zero id passed in)
    x mce
    ~ name colour
    x save (return to calendar for monthToShow)


x terms start with monday/tue or monday/tue/wed, not per group
  x grey out of term
  x edit_terms
  x edit_groups
  x events
  
x public holidays separate - different background colour
x maintenance days separate and allow add names (you can
  see all names)
  x only one date per maintenance day
  x view allows add volunteer only

x allow edit maintenance day name
  x kindycal.py schema
  x kindycal.py maintenance_day_page
  x edit_maintenance_day.html
  x events.js
  x edit_maintenance_day.js

x nav bar
x start on events page
x login pages use referer to go to requested page after login
x return to previous month after edit/view event etc (via cookie?)
x new event etc init date from month cookie

x View Events for: All Groups
x grey out next/prev-months days

x time with your child
x roster jobs
x fair rosters
  x bring in rss-carnival/stall:
    guestbook.py -> fair.py
    StallPage
      x index.html (used as template)
xju@xjutv:~/rss-carnival$ cp index3.html ~/kindycal/www/fair_index.html
xju@xjutv:~/rss-carnival$ cp admin.html ~/kindycal/www/fair_admin.html
xju@xjutv:~/rss-carnival$ cp -R css ~/kindycal/www/fair_css
xju@xjutv:~/rss-carnival$ cp -R images ~/kindycal/www/fair_images
xju@xjutv:~/rss-carnival$ cp -R fonts ~/kindycal/www/fair_fonts
      x adjusted css/ refs
      x adjusted js/ refs
      x adjust images/ refs in
        x fair_index.html
        x fair_admin.html
        x fair.py
        x fair_css/*
          note some links in their go nowhere!
      x adjust fonts/ refs in
        x fair_index.html
        x fair_admin.html
        x fair.py
        x fair_css/*


x upload document/image
  x logout (return to loginLevel login page)
  x maintenance_day description, volunteers notes
  x roster_job description, instance volunteers
    x createRosterJob
    x deleteRosterJob
    x updateRosterJob
    x addRosterJobVolunteer
    x updateVolunteer
    x deleteRosterJobVolunteer

An upload looks like:
Accept	text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding	gzip, deflate
Accept-Language	en-US,en;q=0.5
Connection	keep-alive
Cookie	kc-session=f903cc11c6f811e589f46d06fceec485; month-to-show="\173\012 \"m\": 2\054\012 \"y\": 2016\012\175"
Host	192.168.0.3:8080
Referer	http://192.168.0.3:8080/edit_event.html?id=100
User-Agent	Mozilla/5.0 (X11; Linux i686; rv:24.0) Gecko/20140429 Firefox/24.0 Iceweasel/24.5.0
R
Content-Length	29628
Content-Type	multipart/form-data; boundary=---------------------------2906405429423721941612351615

-----------------------------2906405429423721941612351615
Content-Disposition: form-data; name="filename"; filename="1003-orig.jpeg"
Content-Type: image/jpeg

xxxxx
-----------------------------2906405429423721941612351615--



INFO     2016-01-30 05:37:54,799 kindycal.py:37] {'Content-Type': 'multipart/form-data; boundary=---------------------------21355231821231987527755659472', 'Content_Type': 'multipart/form-data; boundary=---------------------------21355231821231987527755659472', 'Host': '192.168.0.3:8080', 'Referer': 'http://192.168.0.3:8080/edit_event.html?id=100', 'Content-Length': '225', 'X-Appengine-Country': 'ZZ', 'Accept-Language': 'en-US,en;q=0.5', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686; rv:24.0) Gecko/20140429 Firefox/24.0 Iceweasel/24.5.0', 'Cookie': 'kc-session=f903cc11c6f811e589f46d06fceec485; month-to-show="\\173\\012    \\"m\\": 2\\054\\012    \\"y\\": 2016\\012\\175"', 'Content_Length': '225'}

INFO     2016-01-30 05:28:46,376 kindycal.py:37] '-----------------------------14841912591767163687971027465\r\nContent-Disposition: form-data; name="filename"; filename="xxx.txt"\r\nContent-Type: text/plain\r\n\r\nxxx\n\r\n-----------------------------14841912591767163687971027465--\r\n'



INFO     2016-01-30 05:44:23,335 kindycal.py:37] {'Content-Type': 'multipart/form-data; boundary=-----------------------------14841912591767163687971027465', 'Content_Type': 'multipart/form-data; boundary=-----------------------------14841912591767163687971027465', 'Host': '192.168.0.3:8080', 'Content-Length': '225', 'X-Appengine-Country': 'ZZ', 'Cookie': 'kc-session=83d4ce47c71411e58e4d1513d253b538; Path=/', 'Content_Length': '225'}
INFO     2016-01-30 05:44:23,338 kindycal.py:37] '-----------------------------14841912591767163687971027465\r\nContent-Disposition: form-data; name="filename"; filename="xxx.txt"\r\nContent-Type: text/plain\r\n\r\nxxx\n\r\n-----------------------------14841912591767163687971027465--\r\n'


INFO     2016-01-30 05:36:46,739 kindycal.py:37] {'Content-Type': 'multipart/form-data; boundary=--e76d48a9843a14b8', 'Content_Type': 'multipart/form-data; boundary=--e76d48a9843a14b8', 'Host': '192.168.0.3:8080', 'Content-Length': '145', 'X-Appengine-Country': 'ZZ', 'Cookie': 'kc-session=73b7cf21c71311e5a0fd1513d253b538; Path=/', 'Content_Length': '145'}

INFO     2016-01-30 05:33:37,792 kindycal.py:37] '--44de7b2477ba1ea2\r\nContent-Disposition: form-data; name="filename"; filename="xxx.txt"\r\nContent-Type: text/plain\r\n\r\nxxx\n\r\n--44de7b2477ba1ea2--\r\n'


x fix + button after adding new date (use before rather than append)

- allow remove of stuff added during parent's session  

- make more use of ndb keys?
- derive from ndb.Model to provide consistent access
  - a['x'] gets attribute, a['x']=y sets attribute
  - arrange so a['x']['y'] gets json encoded attr x's ['y']
  - but harder to do a['x']['y']='fred' :-(
    ... perhaps the json data type helps?
  - json method gets attributes plus expands json attributes?
  - construct from json with schema validation

-----------------------

  /usr/local/google_appengine/appcfg.py -e xju360@gmail.com update .
  git status
  git push ~/kindycal.bare/
  /usr/local/google_appengine/dev_appserver.py --host 192.168.0.3 --datastore_path=~/kindycal-data --blobstore_path=~/kindycal-blob ~/kindycal/www

  git push https://github.com/urnest/bckindycal


-------------------
to run test-kindycal.py - see comments in its header:


-------------------

What is non-intuitive about appengine+webapp2+ndb?
  - too many levels, app.yaml + webapp2.WSGIApplication
    (want to just have a single level, best would be to just define
     module of functions that are called from urls, but how to do
     "private" functions? private default with public annotation?)
  - request handler is convoluted, simpler to have a function
    whose params are taken from the get/post params
    (plus optional header param); return response, with optional
    headers
  - with default being load file verbatim (if no matching function)
  - need css selector parsing in pq.py
  - ndb v json is clumsy, should be able to do better, ideas:
    - generate ndb classes from json schema?
    - add __getitem__ to make data access more consistent
  - ndb root_key v ancestor is error prone
